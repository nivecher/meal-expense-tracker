# Quick Reference - Key Development Standards

## 🐯 TIGER Principles (Always Follow)
- **T** - Testable: Write testable code, aim for 80%+ coverage
- **I** - Incremental: Small, focused changes, continuous integration
- **G** - Goal-oriented: Single responsibility, solve business problems
- **E** - Explicit: Clear names, type hints, explicit dependencies
- **R** - Responsibility-focused: Separation of concerns, focused code

## 🐍 Python/Flask Standards
- Use type hints for all functions
- Follow Flask blueprint standards
- Use SQLAlchemy 2.0 syntax
- Format with Black (120 char limit)
- Log exceptions with context
- Keep route handlers thin

## 🟨 JavaScript Standards
- Use ES6+ syntax
- External .js files only (no inline JS)
- Use `addEventListener()` not HTML events
- Organize by feature in `/app/static/js/`
- Use `data-*` attributes for HTML-JS communication

## 🏗️ Infrastructure (Terraform)
- Follow Anton Babenko best practices
- Use modules and version locking
- No hardcoded values
- Remote state management
- Security-first approach

## 🧪 Testing Requirements
- 80%+ test coverage
- Arrange-Act-Assert pattern
- Mock external dependencies
- Test edge cases and errors
- Use fixtures for test data

## 🔒 Security Standards
- HTTPS everywhere
- Input validation and sanitization
- Use parameterized queries
- Encrypt sensitive data
- Follow OWASP Top 10
- Regular security scanning

## 📚 API Design
- RESTful principles
- Proper HTTP status codes
- Input validation with Pydantic
- JWT authentication
- Rate limiting
- Comprehensive error handling

## 🚀 Development Workflow
- Feature branches
- Conventional commit messages
- Code review required
- Automated quality gates
- Continuous integration
- Environment-specific configs

## 🎯 Quality Gates
- ✅ Linting passes (Black, flake8, ESLint)
- ✅ Type checking passes (mypy)
- ✅ Security scans pass (Bandit, Trivy)
- ✅ Tests pass with 80%+ coverage
- ✅ Code review approved
- ✅ Documentation updated

---

*For detailed rules, see individual .mdc files in this directory.*
description:
globs:
alwaysApply: false
---
