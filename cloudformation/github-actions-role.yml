AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Role for GitHub Actions to interact with ECR and other AWS services'

Parameters:
  GitHubOrg:
    Type: String
    Description: GitHub organization/user name
  RepositoryName:
    Type: String
    Description: GitHub repository name

Resources:
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: github-actions-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com'
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubOrg}/${RepositoryName}:*'
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
      Policies:
        - PolicyName: GitHubActionsDeployment
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  # ECR permissions
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                  # IAM permissions for task execution role
                  - iam:PassRole
                  # DynamoDB permissions for Terraform state locking
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeTable
                  # Lambda permissions
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:DeleteFunction
                  - lambda:InvokeFunction
                  - lambda:GetFunction
                  - lambda:ListFunctions
                  - lambda:TagResource
                  - lambda:UntagResource
                  # S3 permissions for Terraform backend
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:GetBucketLocation
                Resource: '*'

Outputs:
  RoleARN:
    Description: ARN of the GitHub Actions IAM Role
    Value: !GetAtt GitHubActionsRole.Arn