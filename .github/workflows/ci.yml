name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHONPATH: ${{ github.workspace }}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests with coverage
        run: |
          coverage run -m pytest --cov=app tests/
          coverage report -m
          coverage xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          name: app-coverage
          fail_ci_if_error: true

      - name: Install wrk
        run: sudo apt-get update && sudo apt-get install -y wrk

      - name: Run load testing
        run: |
          # Start the application in a Docker container
          docker-compose up -d
          sleep 10  # Wait for app to start

          # Run load tests using wrk
          wrk -t12 -c400 -d30s http://localhost:5000/api/health

          # Stop and remove containers
          docker-compose down

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install versioning dependencies
        run: |
          pip install setuptools_scm

      - name: Get version
        id: get_version
        run: |
          VERSION=$(python -c "from setuptools_scm import get_version; print(get_version())")
          echo "::set-output name=version::$VERSION"
          echo "Using version: $VERSION"

      - name: Create Git tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git tag -a ${{ steps.get_version.outputs.version }} -m "Release ${{ steps.get_version.outputs.version }}"
          git push --tags --no-verify https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
