repos:
  # 1. File validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-yaml
        types: [yaml]
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict

  # 2. Formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude: .*\.(md|mdx|txt|toml|json|yaml|yml)$

  # 3. Security checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: detect-private-key
      - id: check-added-large-files

  # 4. Debug checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: debug-statements

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=120', '--target-version=py312']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        # Use the same configuration as local flake8
        additional_dependencies: []
        args:
          - --config=.flake8
          - --max-line-length=120
          - --max-complexity=10
          - --show-source
          - --statistics
          - --count
          - '--format=%(path)s:%(row)d:%(col)d: %(code)s - %(text)s'

  # Sort imports
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ['--profile', 'black', '--filter-files']

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ['-c', '.bandit', '-r']
        files: ^app/
        exclude: '(tests/|venv/|.venv/|migrations/)'

  # TODO: Type checking with mypy
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.17.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies:
  #         - types-requests
  #         - types-python-dateutil
  #         - types-pyyaml
  #         - types-pytz
  #       args: [--config-file=setup.cfg]
  #       files: \.py$

  # Markdown linting (pinned to v0.38.0 for Node.js 18 compatibility)
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args:
          - --config=.markdownlint.json

  # Prettier (optional for Markdown/JSON/YAML)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        additional_dependencies:
          - prettier@3.3.3
        files: \.(md|json|ya?ml)$
