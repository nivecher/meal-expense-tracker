"""Add address fields to Restaurant

Revision ID: 02ed372e58e3
Revises: 1164647658e4
Create Date: 2025-05-31 10:57:41.790702

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "02ed372e58e3"
down_revision = "1164647658e4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col["name"] for col in inspector.get_columns("restaurant")]

    with op.batch_alter_table("restaurant", schema=None) as batch_op:
        if "city" not in columns:
            batch_op.add_column(sa.Column("city", sa.String(length=100), nullable=True))
        if "state" not in columns:
            batch_op.add_column(sa.Column("state", sa.String(length=50), nullable=True))
        if "zip_code" not in columns:
            batch_op.add_column(
                sa.Column("zip_code", sa.String(length=20), nullable=True)
            )
        if "created_at" in columns:
            batch_op.drop_column("created_at")
        if "location" in columns:
            batch_op.drop_column("location")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = [col["name"] for col in inspector.get_columns("restaurant")]

    with op.batch_alter_table("restaurant", schema=None) as batch_op:
        if "location" not in columns:
            batch_op.add_column(
                sa.Column("location", sa.VARCHAR(length=100), nullable=True)
            )
        if "created_at" not in columns:
            batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        if "zip_code" in columns:
            batch_op.drop_column("zip_code")
        if "state" in columns:
            batch_op.drop_column("state")
        if "city" in columns:
            batch_op.drop_column("city")

    # ### end Alembic commands ###
